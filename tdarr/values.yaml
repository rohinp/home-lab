apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tdarr
spec:
  selector:
    matchLabels:
      app: tdarr
  serviceName: tdarr
  replicas: 1
  template:
    metadata:
      labels:
        app: tdarr
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      initContainers:
      - name: volume-permissions
        image: busybox:1.31.1
        command: ["sh", "-c", "chown -R 1000:1000 /app/configs && chown -R 1000:1000 /app/server && chown -R 1000:1000 /app/cache"]
        volumeMounts: 
          - mountPath: /app/configs
            name: config
          - mountPath: /app/server
            name: server
          - mountPath: /app/cache
            name: cache
      containers:
         - name: tdarr
           image: haveagitgat/tdarr:latest
           imagePullPolicy: Always
           env:
             - name: PUID
               value: "1000"
             - name: PGID
               value: "1000"
             - name: internalNode
               value: "true"
             - name: nodeID
               value: "internal"
           ports:
             - containerPort: 8265
               name: ui
             - containerPort: 8266
               name: server
           volumeMounts:
             - mountPath: /app/configs
               name: config
             - mountPath: /app/server
               name: server
             - mountPath: /app/logs
               name: logs
             - mountPath: /movies
               name: movies
             - mountPath: /tv
               name: tv
             - mountPath: /app/cache
               name: cache  # Mounting the cache volume
      volumes:
        - name: logs
          emptyDir: {}
        - name: movies
          hostPath:
            path: /new-pool/media/movies
        - name: tv
          hostPath:
            path: /new-pool/media/tvshows
        - name: cache
          hostPath:
            path: /cache-pool/tdarr 
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: microk8s-hostpath
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: server
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: microk8s-hostpath 
      resources:
        requests:
          storage: 10Gi
